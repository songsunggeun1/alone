package com.kh.array;

public class Exam_SortInsertion {
	public static void main(String [] args) {
		// 삽입 정렬 (정렬을 하는 순서)
		// 정렬 알고리즘 중에 하나이면서 가장 간단하고 기본이 되는 알고리즘
		// 배열의 n번 인덱스값을 0번 ~ n-1번 인덱스까지 비교
		// {2, 5, 4 ,1 ,3} -> {1, 2, 3, 4, 5}
		// 왼쪽에 있는 모든 값이랑 비교를 한다라고 생각하면 편하다
		/*
		 * 2, 5의 대소를 비교 : 왼쪽과 오른쪽을 비교(왼쪽이 더 작아서 통과)
		 * 5 와 4를 비교 : 왼쪽이 더 크기 때문에 4, 5가 됨 또 4가 2랑 비교함
		 * 5, 1을 비교 : 왼쪽이 더 커서 1, 5 가 됨 4, 1을 비교했는데 왼쪽이 더 커서 2, 1, 4, 5 중 2,1비교해서 왼쪽이 더커서 또 바뀜
		 * 5, 3을 비교 : 왼쪽이 더커서 1, 2, 4, 3, 5 왼쪽으로 온 3이 4랑 비교했는데 왼쪽이 더 커서 최종 1, 2, 3, 4, 5 
		 */
		int [] arrs = {2, 5, 4, 1, 3};
		for(int i = 1; i < arrs.length; i++) {
			for(int j = i; j > 0; j--) {
				//감소식이지만 감소하면서 비교하는 대상은 많아진다.
				//i는 증가하고 j=i기 때문에
				if(arrs[j-1] > arrs[j]) {
					//왼쪽값이 오른쪽값  보다 크면 [j-1]를 한 이유는 인덱스값의 -1을 주게되면 왼쪽순서라는 뜻.
					int temp = arrs[j-1];
					arrs[j-1] = arrs[j];
					arrs[j] = temp;
				}
			}
		}
		for(int i = 0; i < arrs.length; i++) {
			System.out.print(arrs[i] + " ");
		}
	}

}
